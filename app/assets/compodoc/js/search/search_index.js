var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/APIService.html",[0,1.215,1,1.215]],["body/injectables/APIService.html",[0,0.607,1,0.607,2,0.681,3,0.346,4,0.285,5,0.285,6,0.346,7,0.234,8,0.922,9,1.599,10,1.599,11,1.599,12,0.922,13,2.679,14,1.599,15,1.599,16,1.195,17,1.599,18,1.599,19,1.195,20,1.689,21,3.902,22,2.624,23,2.132,24,0.681,25,1.689,26,0.078,27,2.479,28,1.632,29,1.689,30,3.236,31,2.413,32,1.689,33,2.337,34,1.195,35,1.689,36,0.681,37,1.599,38,2.827,39,0.681,40,3.965,41,1.195,42,1.861,43,2.764,44,2.421,45,3.029,46,0.681,47,2.19,48,1.195,49,1.689,50,0.681,51,3.402,52,0.992,53,0.812,54,3.139,55,2.602,56,2.413,57,1.923,58,3.748,59,2.955,60,2.955,61,3.652,62,3.652,63,0.681,64,1.923,65,0.681,66,1.923,67,0.681,68,0.812,69,0.285,70,0.681,71,0.681,72,0.422,73,0.681,74,0.681,75,0.681,76,0.681,77,1.856,78,4.398,79,2.007,80,2.132,81,1.599,82,1.599,83,1.599,84,1.599,85,1.599,86,1.599,87,1.195,88,1.195,89,1.599,90,1.195,91,1.195,92,1.195,93,1.195,94,1.233,95,1.195,96,1.233,97,0.681,98,0.922,99,0.922,100,0.922,101,0.922,102,0.922,103,0.922,104,0.922,105,0.922,106,0.922,107,0.525,108,1.615,109,0.525,110,0.525,111,0.525,112,0.525,113,0.681,114,1.195,115,0.525,116,0.525,117,0.525,118,0.681,119,0.525,120,0.346,121,2.156,122,2.19,123,1.599,124,0.681,125,3.029,126,1.599,127,2.19,128,2.19,129,2.19,130,2.19,131,0.681,132,0.681,133,0.681,134,0.681,135,0.681,136,1.195,137,0.681,138,0.681,139,0.681,140,0.681,141,0.681,142,0.681,143,0.681,144,0.681,145,0.011,146,0.019,147,0.011]],["title/components/AppComponent.html",[148,1,149,1]],["body/components/AppComponent.html",[1,1.641,3,0.809,4,0.666,5,0.666,7,0.547,8,1.854,12,1.854,13,2.235,23,2.812,25,1.854,26,0.078,27,2.349,28,1.45,29,1.854,32,1.854,33,1.854,38,0.988,52,0.988,53,0.809,59,2.235,60,2.235,68,1.641,69,0.666,77,0.809,80,1.854,108,2.262,119,2.235,120,0.809,121,0.988,145,0.026,146,0.039,147,0.026,148,1.212,149,1.35,150,2.404,151,1.591,152,1.591,153,1.591,154,1.591,155,1.227,156,2.404,157,2.897,158,1.591,159,2.897,160,2.151,161,2.404,162,2.897,163,2.404,164,2.404,165,3.645,166,2.897,167,3.466,168,2.897,169,3.228,170,2.404,171,2.404,172,1.591,173,2.897,174,3.228,175,2.404,176,2.404,177,1.591,178,2.404,179,1.591,180,2.404,181,2.897,182,1.591,183,2.49,184,1.222,185,1.591,186,1.591,187,1.591,188,0.988,189,1.591,190,1.591,191,1.591,192,1.227,193,2.404,194,1.591,195,1.591,196,2.897,197,1.591,198,2.897,199,1.591,200,1.591,201,0.809,202,1.591,203,2.404,204,1.591,205,1.591,206,2.404,207,1.591,208,1.591,209,1.591,210,1.591,211,1.591,212,1.591,213,1.591,214,1.591,215,2.404,216,2.404,217,2.404,218,2.404,219,3.228,220,2.404,221,2.404,222,2.404,223,2.404,224,2.404,225,2.404,226,2.404,227,2.404,228,2.404,229,0.988,230,2.404,231,2.404,232,1.591,233,3.228,234,1.591,235,1.591,236,1.591]],["title/modules/AppModule.html",[237,1.215,238,1.215]],["body/modules/AppModule.html",[3,1.218,4,1.003,5,1.003,26,0.078,68,2.171,69,1.003,72,1.488,77,1.218,120,1.218,145,0.039,146,0.052,147,0.039,149,1.89,160,2,184,1.218,188,1.488,201,1.218,229,1.488,237,1.218,238,2.236,239,1.003,240,1.218,241,2.808,242,2.808,243,2.486,244,1.488,245,1.849,246,1.849,247,1.849,248,1.849,249,1.75,250,2.486,251,1.849,252,1.488,253,2.398,254,2.808,255,3.223,256,3.641,257,3.223,258,1.849,259,1.488,260,2.486,261,3.893,262,1.849,263,2.398,264,3.223,265,3.223,266,2.398,267,2.398,268,2.398]],["title/modules/AppRoutingModule.html",[237,1.215,249,1]],["body/modules/AppRoutingModule.html",[3,1.635,4,1.346,5,1.346,26,0.076,68,1.976,69,1.346,77,1.635,120,1.635,121,1.997,145,0.052,146,0.063,147,0.052,239,1.346,244,1.997,249,1.627,254,2.482,260,3,269,3.218,270,3.218,271,2.594,272,3.889,273,2.482,274,3.218]],["title/coverage.html",[275,2.481]],["body/coverage.html",[0,1.533,1,1.533,5,1.262,6,1.533,26,0.075,28,1.262,145,0.049,146,0.061,147,0.049,148,1.262,149,1.262,155,2.326,192,3.366,201,1.533,275,2.326,276,3.016,277,3.016,278,3.016,279,3.477,280,3.016,281,3.016,282,2.326,283,2.326,284,2.326,285,4.365,286,2.326,287,2.883,288,2.326,289,2.883,290,2.326,291,2.326,292,3.016,293,3.016]],["title/dependencies.html",[240,1.455,294,2.02]],["body/dependencies.html",[26,0.077,69,1.289,72,2.35,145,0.05,146,0.062,147,0.05,183,2.376,184,1.565,188,1.912,240,1.565,258,2.921,259,2.35,262,2.376,273,2.376,295,3.08,296,3.528,297,3.08,298,3.08,299,3.08,300,3.08,301,3.08,302,3.08,303,3.08,304,3.08,305,3.08,306,3.08,307,3.08]],["title/miscellaneous/enumerations.html",[308,0.694,309,2.209]],["body/miscellaneous/enumerations.html",[6,1.56,7,1.054,26,0.076,38,2.345,44,2.914,53,2.355,94,2.914,98,2.914,99,2.914,100,2.914,101,2.914,102,2.914,103,2.914,104,2.914,105,2.914,145,0.05,146,0.062,147,0.05,308,1.054,309,2.368,310,2.368]],["title/index.html",[7,0.694,311,2.02,312,2.02]],["body/index.html",[4,1.107,26,0.056,27,1.643,145,0.043,146,0.056,147,0.043,148,1.599,160,1.643,184,1.942,201,1.345,252,1.643,296,2.042,313,2.647,314,3.441,315,2.647,316,3.823,317,2.647,318,2.647,319,3.441,320,4.195,321,4.378,322,2.647,323,2.647,324,2.647,325,2.647,326,2.647,327,2.647,328,2.647,329,2.647,330,2.647,331,2.647,332,3.823,333,3.823,334,2.647,335,4.195,336,2.647,337,2.647,338,2.647,339,2.647,340,2.647,341,2.647,342,2.042,343,3.441,344,3.441,345,4.047,346,2.647,347,3.441,348,3.441,349,2.647,350,4.047,351,2.647,352,2.647,353,2.647,354,3.823,355,2.647,356,2.647,357,2.647,358,2.647]],["title/modules.html",[239,1.346]],["body/modules.html",[26,0.067,145,0.058,146,0.067,147,0.058,238,1.795,239,1.478,249,1.478,259,2.193,359,3.533,360,3.533,361,4.111,362,3.533,363,3.533]],["title/overview.html",[364,2.481]],["body/overview.html",[0,1.582,26,0.072,145,0.051,146,0.062,147,0.051,148,1.302,149,1.899,229,1.933,237,1.582,238,2.306,239,1.302,240,1.582,241,2.402,242,2.402,243,2.402,244,1.933,245,2.402,246,2.402,247,2.402,248,2.402,249,1.723,250,2.94,251,2.402,252,1.933,279,2.402,364,2.402,365,2.402,366,3.812]],["title/routes.html",[271,1.997]],["body/routes.html",[26,0.068,145,0.06,146,0.068,147,0.06,271,2.276]],["title/miscellaneous/typealiases.html",[308,0.694,367,2.863]],["body/miscellaneous/typealiases.html",[6,1.349,7,0.912,20,2.659,22,2.659,26,0.056,28,1.963,35,2.659,42,2.659,49,2.659,79,2.659,96,2.659,106,2.659,107,2.659,108,2.14,109,2.659,110,2.659,111,2.659,112,2.659,115,2.659,116,2.659,117,2.659,145,0.043,146,0.056,147,0.043,308,0.912,310,3.599,368,2.655,369,2.655,370,3.609,371,2.655]],["title/miscellaneous/variables.html",[308,0.694,372,2.209]],["body/miscellaneous/variables.html",[7,0.901,26,0.076,28,1.75,52,2.503,53,2.049,145,0.043,146,0.056,147,0.043,282,2.023,283,2.638,284,2.638,286,2.023,287,3.111,288,2.023,289,2.023,290,2.638,291,2.638,308,0.901,342,2.638,365,2.936,370,2.023,372,2.023,373,2.623,374,3.42,375,2.623,376,2.623,377,3.806,378,2.623,379,4.29,380,2.623,381,2.623,382,2.623,383,2.623,384,2.623,385,2.623,386,2.623,387,2.623,388,2.623,389,2.623,390,2.623,391,2.623,392,2.623,393,2.623,394,2.623,395,2.623,396,2.623,397,2.623,398,2.623,399,2.623,400,2.623,401,2.623,402,2.623,403,3.42,404,2.623,405,2.623]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":279,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["0.10.2",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["0.4.6",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":366,"title":{},"body":{"overview.html":{}}}],["10.1.4",{"_index":296,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["179pllovmo8cek0a4gmrb4g9fg",{"_index":390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":365,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["2.amazonaws.com/graphql",{"_index":395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["242802c79f05",{"_index":385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2:f702be1e",{"_index":381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2_qitc5kxk9",{"_index":388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.3.3",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["48eb",{"_index":383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6.0",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["__typename",{"_index":58,"title":{},"body":{"injectables/APIService.html":{}}}],["_null",{"_index":105,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/enumerations.html":{}}}],["actual_component",{"_index":236,"title":{},"body":{"components/AppComponent.html":{}}}],["aliases",{"_index":368,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ampapi",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["amplify",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["amplify/api",{"_index":73,"title":{},"body":{"injectables/APIService.html":{}}}],["amplify/ui",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["amplifyapp",{"_index":313,"title":{},"body":{"index.html":{}}}],["amplifyuiangularmodule",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["angular",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":69,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular10",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["api",{"_index":70,"title":{},"body":{"injectables/APIService.html":{}}}],["api.graphql",{"_index":54,"title":{},"body":{"injectables/APIService.html":{}}}],["api.service",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["api.us",{"_index":394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_key",{"_index":398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/APIService.html":{}},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"coverage.html":{}}}],["app",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{}}}],["app.component",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["app/assets/test_development",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":149,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":238,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":249,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":80,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{}}}],["artifacts",{"_index":336,"title":{},"body":{"index.html":{}}}],["async",{"_index":13,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{}}}],["attributeexists",{"_index":91,"title":{},"body":{"injectables/APIService.html":{}}}],["attributetype",{"_index":93,"title":{},"body":{"injectables/APIService.html":{}}}],["automatically",{"_index":326,"title":{},"body":{"index.html":{}}}],["available",{"_index":363,"title":{},"body":{"modules.html":{}}}],["await",{"_index":128,"title":{},"body":{"injectables/APIService.html":{}}}],["aws",{"_index":72,"title":{},"body":{"injectables/APIService.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["aws_appsync_apikey",{"_index":399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aws_appsync_authenticationtype",{"_index":397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aws_appsync_graphqlendpoint",{"_index":392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aws_appsync_region",{"_index":396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aws_cognito_identity_pool_id",{"_index":380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aws_cognito_region",{"_index":386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aws_project_region",{"_index":378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aws_user_pools_id",{"_index":387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aws_user_pools_web_client_id",{"_index":389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["awsmobile",{"_index":284,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["b571",{"_index":384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcc2",{"_index":382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beginswith",{"_index":90,"title":{},"body":{"injectables/APIService.html":{}}}],["being",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["between",{"_index":89,"title":{},"body":{"injectables/APIService.html":{}}}],["binary",{"_index":98,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/enumerations.html":{}}}],["binaryset",{"_index":99,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/enumerations.html":{}}}],["bool",{"_index":100,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":92,"title":{},"body":{"injectables/APIService.html":{}}}],["bootstrap",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["browse",{"_index":361,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":335,"title":{},"body":{"index.html":{}}}],["catch(e",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["cguf3j2aange3ddomyx7m6zq6u",{"_index":401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":328,"title":{},"body":{"index.html":{}}}],["check",{"_index":357,"title":{},"body":{"index.html":{}}}],["city",{"_index":60,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{}}}],["class",{"_index":120,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["cli",{"_index":316,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":330,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["compodoc/compodoc",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["component",{"_index":148,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_template",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["components",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["condition",{"_index":21,"title":{},"body":{"injectables/APIService.html":{}}}],["configure",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('error",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('item",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":121,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["constructor",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(ampapi",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["contains",{"_index":87,"title":{},"body":{"injectables/APIService.html":{}}}],["context",{"_index":290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":275,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["created",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["createdat",{"_index":61,"title":{},"body":{"injectables/APIService.html":{}}}],["createform",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["createrestaurant",{"_index":14,"title":{},"body":{"injectables/APIService.html":{}}}],["createrestaurant($input",{"_index":124,"title":{},"body":{"injectables/APIService.html":{}}}],["createrestaurant(input",{"_index":19,"title":{},"body":{"injectables/APIService.html":{}}}],["createrestaurantinput",{"_index":20,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/typealiases.html":{}}}],["createrestaurantmutation",{"_index":107,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/typealiases.html":{}}}],["creating",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["custom_elements_schema",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["d",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["da2",{"_index":400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declare",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":52,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{}}}],["deleterestaurant",{"_index":15,"title":{},"body":{"injectables/APIService.html":{}}}],["deleterestaurant($input",{"_index":134,"title":{},"body":{"injectables/APIService.html":{}}}],["deleterestaurant(input",{"_index":34,"title":{},"body":{"injectables/APIService.html":{}}}],["deleterestaurantinput",{"_index":35,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/typealiases.html":{}}}],["deleterestaurantmutation",{"_index":110,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":240,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":59,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{}}}],["dev",{"_index":323,"title":{},"body":{"index.html":{}}}],["development",{"_index":318,"title":{},"body":{"index.html":{}}}],["directive",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["directives",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":334,"title":{},"body":{"index.html":{}}}],["directory",{"_index":339,"title":{},"body":{"index.html":{}}}],["dist",{"_index":338,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["dynamic",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["e2e",{"_index":351,"title":{},"body":{"index.html":{}}}],["east",{"_index":379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["end",{"_index":350,"title":{},"body":{"index.html":{}}}],["enum",{"_index":97,"title":{},"body":{"injectables/APIService.html":{}}}],["enumerations",{"_index":309,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":287,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eq",{"_index":82,"title":{},"body":{"injectables/APIService.html":{}}}],["event",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["event.items",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["event.value.data.oncreaterestaurant",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["execute",{"_index":347,"title":{},"body":{"index.html":{}}}],["export",{"_index":77,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["exports",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["exports.ts",{"_index":283,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fb",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["files",{"_index":329,"title":{},"body":{"index.html":{}}}],["filter",{"_index":47,"title":{},"body":{"injectables/APIService.html":{}}}],["flag",{"_index":341,"title":{},"body":{"index.html":{}}}],["form",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["formbuilder",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["formgroup",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["formsmodule",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["further",{"_index":353,"title":{},"body":{"index.html":{}}}],["ge",{"_index":85,"title":{},"body":{"injectables/APIService.html":{}}}],["generate",{"_index":332,"title":{},"body":{"index.html":{}}}],["generated",{"_index":315,"title":{},"body":{"index.html":{}}}],["getrestaurant",{"_index":16,"title":{},"body":{"injectables/APIService.html":{}}}],["getrestaurant($id",{"_index":137,"title":{},"body":{"injectables/APIService.html":{}}}],["getrestaurant(id",{"_index":37,"title":{},"body":{"injectables/APIService.html":{}}}],["getrestaurantquery",{"_index":111,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/typealiases.html":{}}}],["getting",{"_index":311,"title":{"index.html":{}},"body":{}}],["go",{"_index":356,"title":{},"body":{"index.html":{}}}],["gqlapiservicearguments",{"_index":125,"title":{},"body":{"injectables/APIService.html":{}}}],["gqlapiservicearguments.condition",{"_index":126,"title":{},"body":{"injectables/APIService.html":{}}}],["gqlapiservicearguments.filter",{"_index":141,"title":{},"body":{"injectables/APIService.html":{}}}],["gqlapiservicearguments.limit",{"_index":142,"title":{},"body":{"injectables/APIService.html":{}}}],["gqlapiservicearguments.nexttoken",{"_index":143,"title":{},"body":{"injectables/APIService.html":{}}}],["graph",{"_index":362,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":74,"title":{},"body":{"injectables/APIService.html":{}}}],["graphqloperation",{"_index":55,"title":{},"body":{"injectables/APIService.html":{}}}],["graphqloperation(statement",{"_index":129,"title":{},"body":{"injectables/APIService.html":{}}}],["graphqlresult",{"_index":71,"title":{},"body":{"injectables/APIService.html":{}}}],["gt",{"_index":86,"title":{},"body":{"injectables/APIService.html":{}}}],["help",{"_index":354,"title":{},"body":{"index.html":{}}}],["html",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["http://localhost:4200",{"_index":325,"title":{},"body":{"index.html":{}}}],["https://ctxmi4oywjc3vfxuql6ciiuy7i.appsync",{"_index":393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":40,"title":{},"body":{"injectables/APIService.html":{}}}],["identifier",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["import",{"_index":68,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["imports",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["inject",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/APIService.html":{}},"body":{"injectables/APIService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/APIService.html":{}}}],["input",{"_index":30,"title":{},"body":{"injectables/APIService.html":{}}}],["int",{"_index":140,"title":{},"body":{"injectables/APIService.html":{}}}],["items",{"_index":114,"title":{},"body":{"injectables/APIService.html":{}}}],["karma",{"_index":349,"title":{},"body":{"index.html":{}}}],["le",{"_index":83,"title":{},"body":{"injectables/APIService.html":{}}}],["legend",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["limit",{"_index":43,"title":{},"body":{"injectables/APIService.html":{}}}],["list",{"_index":101,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/enumerations.html":{}}}],["listrestaurants",{"_index":17,"title":{},"body":{"injectables/APIService.html":{}}}],["listrestaurants($filter",{"_index":139,"title":{},"body":{"injectables/APIService.html":{}}}],["listrestaurants(filter",{"_index":41,"title":{},"body":{"injectables/APIService.html":{}}}],["listrestaurantsquery",{"_index":112,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/typealiases.html":{}}}],["literal",{"_index":370,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lt",{"_index":84,"title":{},"body":{"injectables/APIService.html":{}}}],["map",{"_index":102,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/enumerations.html":{}}}],["matching",{"_index":146,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["methods",{"_index":12,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{}}}],["miscellaneous",{"_index":308,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modelattributetypes",{"_index":94,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/enumerations.html":{}}}],["modelidinput",{"_index":106,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/typealiases.html":{}}}],["modelrestaurantconditioninput",{"_index":22,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/typealiases.html":{}}}],["modelrestaurantconnection",{"_index":113,"title":{},"body":{"injectables/APIService.html":{}}}],["modelrestaurantfilterinput",{"_index":42,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/typealiases.html":{}}}],["modelsizeinput",{"_index":96,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/typealiases.html":{}}}],["modelstringinput",{"_index":79,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/typealiases.html":{}}}],["module",{"_index":237,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":239,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":355,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":123,"title":{},"body":{"injectables/APIService.html":{}}}],["name",{"_index":27,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"index.html":{}}}],["navigate",{"_index":324,"title":{},"body":{"index.html":{}}}],["ne",{"_index":81,"title":{},"body":{"injectables/APIService.html":{}}}],["new",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"index.html":{}}}],["newrestaurant",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["nexttoken",{"_index":45,"title":{},"body":{"injectables/APIService.html":{}}}],["ng",{"_index":321,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["notcontains",{"_index":88,"title":{},"body":{"injectables/APIService.html":{}}}],["npx",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["null",{"_index":78,"title":{},"body":{"injectables/APIService.html":{}}}],["number",{"_index":44,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/enumerations.html":{}}}],["numberset",{"_index":103,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/enumerations.html":{}}}],["oauth",{"_index":391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":51,"title":{},"body":{"injectables/APIService.html":{}}}],["oncreate",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["oncreate(restaurant",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["oncreaterestaurant",{"_index":57,"title":{},"body":{"injectables/APIService.html":{}}}],["oncreaterestaurantlistener",{"_index":9,"title":{},"body":{"injectables/APIService.html":{}}}],["oncreaterestaurantsubscription",{"_index":115,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/typealiases.html":{}}}],["ondeleterestaurant",{"_index":64,"title":{},"body":{"injectables/APIService.html":{}}}],["ondeleterestaurantlistener",{"_index":10,"title":{},"body":{"injectables/APIService.html":{}}}],["ondeleterestaurantsubscription",{"_index":117,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/typealiases.html":{}}}],["oninit",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["onupdaterestaurant",{"_index":66,"title":{},"body":{"injectables/APIService.html":{}}}],["onupdaterestaurantlistener",{"_index":11,"title":{},"body":{"injectables/APIService.html":{}}}],["onupdaterestaurantsubscription",{"_index":116,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/typealiases.html":{}}}],["optional",{"_index":29,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{}}}],["out",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":364,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":294,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":25,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{}}}],["private",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["prod",{"_index":340,"title":{},"body":{"index.html":{}}}],["production",{"_index":342,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":314,"title":{},"body":{"index.html":{}}}],["promise",{"_index":33,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{}}}],["properties",{"_index":8,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{}}}],["protractor",{"_index":352,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":118,"title":{},"body":{"injectables/APIService.html":{}}}],["providers",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["query",{"_index":136,"title":{},"body":{"injectables/APIService.html":{}}}],["reactiveformsmodule",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":358,"title":{},"body":{"index.html":{}}}],["reload",{"_index":327,"title":{},"body":{"index.html":{}}}],["require",{"_index":291,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":127,"title":{},"body":{"injectables/APIService.html":{}}}],["response.data.createrestaurant",{"_index":131,"title":{},"body":{"injectables/APIService.html":{}}}],["response.data.deleterestaurant",{"_index":135,"title":{},"body":{"injectables/APIService.html":{}}}],["response.data.getrestaurant",{"_index":138,"title":{},"body":{"injectables/APIService.html":{}}}],["response.data.listrestaurants",{"_index":144,"title":{},"body":{"injectables/APIService.html":{}}}],["response.data.updaterestaurant",{"_index":133,"title":{},"body":{"injectables/APIService.html":{}}}],["restaurant",{"_index":108,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"miscellaneous/typealiases.html":{}}}],["restaurant.city",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["restaurant.description",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["restaurant.name",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["restaurants",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["result",{"_index":145,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":147,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":130,"title":{},"body":{"injectables/APIService.html":{}}}],["returns",{"_index":32,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{}}}],["root",{"_index":119,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{}}}],["routermodule",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":271,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":320,"title":{},"body":{"index.html":{}}}],["running",{"_index":343,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["sample",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["scaffolding",{"_index":331,"title":{},"body":{"index.html":{}}}],["schemas",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["selector",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["serve",{"_index":322,"title":{},"body":{"index.html":{}}}],["server",{"_index":319,"title":{},"body":{"index.html":{}}}],["size",{"_index":95,"title":{},"body":{"injectables/APIService.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{}}}],["spec\\.ts",{"_index":404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api.service.ts",{"_index":310,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../aws",{"_index":373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../restaurant.ts",{"_index":369,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../test.ts",{"_index":374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/api.service.ts",{"_index":6,"title":{},"body":{"injectables/APIService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/api.service.ts:188",{"_index":24,"title":{},"body":{"injectables/APIService.html":{}}}],["src/app/api.service.ts:214",{"_index":50,"title":{},"body":{"injectables/APIService.html":{}}}],["src/app/api.service.ts:240",{"_index":36,"title":{},"body":{"injectables/APIService.html":{}}}],["src/app/api.service.ts:266",{"_index":39,"title":{},"body":{"injectables/APIService.html":{}}}],["src/app/api.service.ts:286",{"_index":46,"title":{},"body":{"injectables/APIService.html":{}}}],["src/app/api.service.ts:321",{"_index":63,"title":{},"body":{"injectables/APIService.html":{}}}],["src/app/api.service.ts:339",{"_index":67,"title":{},"body":{"injectables/APIService.html":{}}}],["src/app/api.service.ts:357",{"_index":65,"title":{},"body":{"injectables/APIService.html":{}}}],["src/app/app",{"_index":269,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["src/aws",{"_index":282,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":286,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":288,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":289,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tsconfig.compodoc.json",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["src/types/restaurant.ts",{"_index":371,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["started",{"_index":312,"title":{"index.html":{}},"body":{}}],["statement",{"_index":122,"title":{},"body":{"injectables/APIService.html":{}}}],["statements",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":337,"title":{},"body":{"index.html":{}}}],["string",{"_index":38,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"miscellaneous/enumerations.html":{}}}],["stringset",{"_index":104,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/enumerations.html":{}}}],["styles",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurls",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["submit",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["subscription",{"_index":56,"title":{},"body":{"injectables/APIService.html":{}}}],["support",{"_index":359,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":360,"title":{},"body":{"modules.html":{}}}],["table",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["test",{"_index":346,"title":{},"body":{"index.html":{}}}],["tests",{"_index":345,"title":{},"body":{"index.html":{}}}],["this.ampapi.createrestaurant(restaurant).then(event",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ampapi.listrestaurants().then(event",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ampapi.oncreaterestaurantlistener.subscribe",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["this.createform",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["this.createform.reset",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["this.fb.group",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["this.restaurants",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["title",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ts",{"_index":76,"title":{},"body":{"injectables/APIService.html":{}}}],["tslib",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":28,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":367,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/restaurant",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["unit",{"_index":344,"title":{},"body":{"index.html":{}}}],["updatedat",{"_index":62,"title":{},"body":{"injectables/APIService.html":{}}}],["updaterestaurant",{"_index":18,"title":{},"body":{"injectables/APIService.html":{}}}],["updaterestaurant($input",{"_index":132,"title":{},"body":{"injectables/APIService.html":{}}}],["updaterestaurant(input",{"_index":48,"title":{},"body":{"injectables/APIService.html":{}}}],["updaterestaurantinput",{"_index":49,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/typealiases.html":{}}}],["updaterestaurantmutation",{"_index":109,"title":{},"body":{"injectables/APIService.html":{},"miscellaneous/typealiases.html":{}}}],["use",{"_index":333,"title":{},"body":{"index.html":{}}}],["validators",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["validators.required",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["value",{"_index":53,"title":{},"body":{"injectables/APIService.html":{},"components/AppComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["variable",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["variables",{"_index":372,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":317,"title":{},"body":{"index.html":{}}}],["via",{"_index":348,"title":{},"body":{"index.html":{}}}],["void",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["yes",{"_index":31,"title":{},"body":{"injectables/APIService.html":{}}}],["zen",{"_index":75,"title":{},"body":{"injectables/APIService.html":{}}}],["zone.js",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/APIService.html":{"url":"injectables/APIService.html","title":"injectable - APIService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  APIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/API.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                OnCreateRestaurantListener\n                            \n                            \n                                OnDeleteRestaurantListener\n                            \n                            \n                                OnUpdateRestaurantListener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateRestaurant\n                            \n                            \n                                    Async\n                                DeleteRestaurant\n                            \n                            \n                                    Async\n                                GetRestaurant\n                            \n                            \n                                    Async\n                                ListRestaurants\n                            \n                            \n                                    Async\n                                UpdateRestaurant\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            CreateRestaurant\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateRestaurant(input: CreateRestaurantInput, condition?: ModelRestaurantConditionInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/API.service.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateRestaurantInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    condition\n                                    \n                                                ModelRestaurantConditionInput\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            DeleteRestaurant\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    DeleteRestaurant(input: DeleteRestaurantInput, condition?: ModelRestaurantConditionInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/API.service.ts:240\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                DeleteRestaurantInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    condition\n                                    \n                                                ModelRestaurantConditionInput\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            GetRestaurant\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    GetRestaurant(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/API.service.ts:266\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ListRestaurants\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ListRestaurants(filter?: ModelRestaurantFilterInput, limit?: number, nextToken?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/API.service.ts:286\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                ModelRestaurantFilterInput\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    nextToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            UpdateRestaurant\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateRestaurant(input: UpdateRestaurantInput, condition?: ModelRestaurantConditionInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/API.service.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                UpdateRestaurantInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    condition\n                                    \n                                                ModelRestaurantConditionInput\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OnCreateRestaurantListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : API.graphql(\n    graphqlOperation(\n      `subscription OnCreateRestaurant {\n        onCreateRestaurant {\n          __typename\n          id\n          name\n          description\n          city\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable\n                        \n                    \n                        \n                            \n                                    Defined in src/app/API.service.ts:321\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OnDeleteRestaurantListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteRestaurant {\n        onDeleteRestaurant {\n          __typename\n          id\n          name\n          description\n          city\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable\n                        \n                    \n                        \n                            \n                                    Defined in src/app/API.service.ts:357\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OnUpdateRestaurantListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateRestaurant {\n        onUpdateRestaurant {\n          __typename\n          id\n          name\n          description\n          city\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable\n                        \n                    \n                        \n                            \n                                    Defined in src/app/API.service.ts:339\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport API, { graphqlOperation, GraphQLResult } from \"@aws-amplify/api-graphql\";\nimport { Observable } from \"zen-observable-ts\";\n\nexport type CreateRestaurantInput = {\n  id?: string | null;\n  name: string;\n  description: string;\n  city: string;\n};\n\nexport type ModelRestaurantConditionInput = {\n  name?: ModelStringInput | null;\n  description?: ModelStringInput | null;\n  city?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelRestaurantConditionInput | null;\n};\n\nexport type ModelStringInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport enum ModelAttributeTypes {\n  binary = \"binary\",\n  binarySet = \"binarySet\",\n  bool = \"bool\",\n  list = \"list\",\n  map = \"map\",\n  number = \"number\",\n  numberSet = \"numberSet\",\n  string = \"string\",\n  stringSet = \"stringSet\",\n  _null = \"_null\"\n}\n\nexport type ModelSizeInput = {\n  ne?: number | null;\n  eq?: number | null;\n  le?: number | null;\n  lt?: number | null;\n  ge?: number | null;\n  gt?: number | null;\n  between?: Array | null;\n};\n\nexport type UpdateRestaurantInput = {\n  id: string;\n  name?: string | null;\n  description?: string | null;\n  city?: string | null;\n};\n\nexport type DeleteRestaurantInput = {\n  id?: string | null;\n};\n\nexport type ModelRestaurantFilterInput = {\n  id?: ModelIDInput | null;\n  name?: ModelStringInput | null;\n  description?: ModelStringInput | null;\n  city?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelRestaurantFilterInput | null;\n};\n\nexport type ModelIDInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport type CreateRestaurantMutation = {\n  __typename: \"Restaurant\";\n  id: string;\n  name: string;\n  description: string;\n  city: string;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateRestaurantMutation = {\n  __typename: \"Restaurant\";\n  id: string;\n  name: string;\n  description: string;\n  city: string;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteRestaurantMutation = {\n  __typename: \"Restaurant\";\n  id: string;\n  name: string;\n  description: string;\n  city: string;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type GetRestaurantQuery = {\n  __typename: \"Restaurant\";\n  id: string;\n  name: string;\n  description: string;\n  city: string;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListRestaurantsQuery = {\n  __typename: \"ModelRestaurantConnection\";\n  items: Array | null;\n  nextToken: string | null;\n};\n\nexport type OnCreateRestaurantSubscription = {\n  __typename: \"Restaurant\";\n  id: string;\n  name: string;\n  description: string;\n  city: string;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateRestaurantSubscription = {\n  __typename: \"Restaurant\";\n  id: string;\n  name: string;\n  description: string;\n  city: string;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteRestaurantSubscription = {\n  __typename: \"Restaurant\";\n  id: string;\n  name: string;\n  description: string;\n  city: string;\n  createdAt: string;\n  updatedAt: string;\n};\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class APIService {\n  async CreateRestaurant(\n    input: CreateRestaurantInput,\n    condition?: ModelRestaurantConditionInput\n  ): Promise {\n    const statement = `mutation CreateRestaurant($input: CreateRestaurantInput!, $condition: ModelRestaurantConditionInput) {\n        createRestaurant(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          description\n          city\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createRestaurant;\n  }\n  async UpdateRestaurant(\n    input: UpdateRestaurantInput,\n    condition?: ModelRestaurantConditionInput\n  ): Promise {\n    const statement = `mutation UpdateRestaurant($input: UpdateRestaurantInput!, $condition: ModelRestaurantConditionInput) {\n        updateRestaurant(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          description\n          city\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.updateRestaurant;\n  }\n  async DeleteRestaurant(\n    input: DeleteRestaurantInput,\n    condition?: ModelRestaurantConditionInput\n  ): Promise {\n    const statement = `mutation DeleteRestaurant($input: DeleteRestaurantInput!, $condition: ModelRestaurantConditionInput) {\n        deleteRestaurant(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          description\n          city\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteRestaurant;\n  }\n  async GetRestaurant(id: string): Promise {\n    const statement = `query GetRestaurant($id: ID!) {\n        getRestaurant(id: $id) {\n          __typename\n          id\n          name\n          description\n          city\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.getRestaurant;\n  }\n  async ListRestaurants(\n    filter?: ModelRestaurantFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListRestaurants($filter: ModelRestaurantFilterInput, $limit: Int, $nextToken: String) {\n        listRestaurants(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            name\n            description\n            city\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listRestaurants;\n  }\n  OnCreateRestaurantListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateRestaurant {\n        onCreateRestaurant {\n          __typename\n          id\n          name\n          description\n          city\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnUpdateRestaurantListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateRestaurant {\n        onUpdateRestaurant {\n          __typename\n          id\n          name\n          description\n          city\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnDeleteRestaurantListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteRestaurant {\n        onDeleteRestaurant {\n          __typename\n          id\n          name\n          description\n          city\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createForm\n                            \n                            \n                                restaurants\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ampApi: APIService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ampApi\n                                                  \n                                                        \n                                                                        APIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onCreate(restaurant: Restaurant)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    restaurant\n                                    \n                                                Restaurant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            restaurants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amplify-angular-app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { APIService } from './API.service';\nimport { Restaurant } from '../types/restaurant';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent implements OnInit {\n  title = 'amplify-angular-app';\n  public createForm: FormGroup;\n\n  /* declare restaurants variable */\n  restaurants: Array;\n\n  constructor(\n    private ampApi: APIService,\n    private fb: FormBuilder\n    ) { }\n\n  async ngOnInit(): Promise {\n    this.createForm = this.fb.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      city: ['', Validators.required]\n    });\n    this.ampApi.ListRestaurants().then(event => {\n      this.restaurants = event.items;\n    });\n\n    /* subscribe to new restaurants being created */\n    this.ampApi.OnCreateRestaurantListener.subscribe( (event: any) => {\n      const newRestaurant = event.value.data.onCreateRestaurant;\n      this.restaurants = [newRestaurant, ...this.restaurants];\n    });\n  }\n\n  public onCreate(restaurant: Restaurant): void {\n    this.ampApi.CreateRestaurant(restaurant).then(event => {\n      console.log('item created!');\n      this.createForm.reset();\n    })\n    .catch(e => {\n      console.log('error creating restaurant...', e);\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Amplify Angular10 Sample\n    \n\n    \n      \n        \n          Name: \n          \n        \n        \n          Description: \n          \n        \n        \n          City: \n          \n        \n        Submit\n      \n    \n\n    \n      \n        create compodoc: npx @compodoc/compodoc -p src/tsconfig.compodoc.json -d ./app/assets/test_development\n      \n      \n        compodoc\n      \n    \n\n  \n  \n\n\n\n  \n    {{ restaurant.city }}\n    {{ restaurant.name }}\n    {{ restaurant.description }}\n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Amplify Angular10 Sample                                Name:                                     Description:                                     City:                           Submit                            create compodoc: npx @compodoc/compodoc -p src/tsconfig.compodoc.json -d ./app/assets/test_development                    compodoc                    {{ restaurant.city }}    {{ restaurant.name }}    {{ restaurant.description }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\n/* import AmplifyUIAngularModule  */\nimport { AmplifyUIAngularModule } from '@aws-amplify/ui-angular';\n\n/* new form imports */\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    /* configure app with AmplifyUIAngularModule */\n    AmplifyUIAngularModule,\n    FormsModule, ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule { }\n\n/*  */\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/API.service.ts\n            \n            injectable\n            APIService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/aws-exports.ts\n            \n            variable\n            awsmobile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.4\n        \n            @angular/common : ~10.1.4\n        \n            @angular/compiler : ~10.1.4\n        \n            @angular/core : ~10.1.4\n        \n            @angular/forms : ~10.1.4\n        \n            @angular/platform-browser : ~10.1.4\n        \n            @angular/platform-browser-dynamic : ~10.1.4\n        \n            @angular/router : ~10.1.4\n        \n            @aws-amplify/ui-angular : ^0.4.6\n        \n            aws-amplify : ^3.3.3\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ModelAttributeTypes   (src/.../API.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/API.service.ts\n    \n        \n            \n                \n                    \n                        \n                        ModelAttributeTypes\n                    \n                \n                        \n                            \n                                 binary\n                            \n                        \n                        \n                            \n                                Value : binary\n                            \n                        \n                        \n                            \n                                 binarySet\n                            \n                        \n                        \n                            \n                                Value : binarySet\n                            \n                        \n                        \n                            \n                                 bool\n                            \n                        \n                        \n                            \n                                Value : bool\n                            \n                        \n                        \n                            \n                                 list\n                            \n                        \n                        \n                            \n                                Value : list\n                            \n                        \n                        \n                            \n                                 map\n                            \n                        \n                        \n                            \n                                Value : map\n                            \n                        \n                        \n                            \n                                 number\n                            \n                        \n                        \n                            \n                                Value : number\n                            \n                        \n                        \n                            \n                                 numberSet\n                            \n                        \n                        \n                            \n                                Value : numberSet\n                            \n                        \n                        \n                            \n                                 string\n                            \n                        \n                        \n                            \n                                Value : string\n                            \n                        \n                        \n                            \n                                 stringSet\n                            \n                        \n                        \n                            \n                                Value : stringSet\n                            \n                        \n                        \n                            \n                                 _null\n                            \n                        \n                        \n                            \n                                Value : _null\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAmplifyApp\nThis project was generated with Angular CLI version 10.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateRestaurantInput   (src/.../API.service.ts)\n                        \n                        \n                            CreateRestaurantMutation   (src/.../API.service.ts)\n                        \n                        \n                            DeleteRestaurantInput   (src/.../API.service.ts)\n                        \n                        \n                            DeleteRestaurantMutation   (src/.../API.service.ts)\n                        \n                        \n                            GetRestaurantQuery   (src/.../API.service.ts)\n                        \n                        \n                            ListRestaurantsQuery   (src/.../API.service.ts)\n                        \n                        \n                            ModelIDInput   (src/.../API.service.ts)\n                        \n                        \n                            ModelRestaurantConditionInput   (src/.../API.service.ts)\n                        \n                        \n                            ModelRestaurantFilterInput   (src/.../API.service.ts)\n                        \n                        \n                            ModelSizeInput   (src/.../API.service.ts)\n                        \n                        \n                            ModelStringInput   (src/.../API.service.ts)\n                        \n                        \n                            OnCreateRestaurantSubscription   (src/.../API.service.ts)\n                        \n                        \n                            OnDeleteRestaurantSubscription   (src/.../API.service.ts)\n                        \n                        \n                            OnUpdateRestaurantSubscription   (src/.../API.service.ts)\n                        \n                        \n                            Restaurant   (src/.../restaurant.ts)\n                        \n                        \n                            UpdateRestaurantInput   (src/.../API.service.ts)\n                        \n                        \n                            UpdateRestaurantMutation   (src/.../API.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/API.service.ts\n    \n    \n        \n            \n                \n                    \n                    CreateRestaurantInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CreateRestaurantMutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeleteRestaurantInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeleteRestaurantMutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GetRestaurantQuery\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListRestaurantsQuery\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ModelIDInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ModelRestaurantConditionInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ModelRestaurantFilterInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ModelSizeInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ModelStringInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OnCreateRestaurantSubscription\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OnDeleteRestaurantSubscription\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OnUpdateRestaurantSubscription\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UpdateRestaurantInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UpdateRestaurantMutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/restaurant.ts\n    \n    \n        \n            \n                \n                    \n                    Restaurant\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            awsmobile   (src/.../aws-exports.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/aws-exports.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            awsmobile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  aws_project_region: 'us-east-2',\n  aws_cognito_identity_pool_id: 'us-east-2:f702be1e-bcc2-48eb-b571-242802c79f05',\n  aws_cognito_region: 'us-east-2',\n  aws_user_pools_id: 'us-east-2_QitC5KXk9',\n  aws_user_pools_web_client_id: '179pllovmo8cek0a4gmrb4g9fg',\n  oauth: {},\n  aws_appsync_graphqlEndpoint: 'https://ctxmi4oywjc3vfxuql6ciiuy7i.appsync-api.us-east-2.amazonaws.com/graphql',\n  aws_appsync_region: 'us-east-2',\n  aws_appsync_authenticationType: 'API_KEY',\n  aws_appsync_apiKey: 'da2-cguf3j2aange3ddomyx7m6zq6u'\n}\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
